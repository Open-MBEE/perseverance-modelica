within Ingenuity.Controllers;

model AltitudePositionAnglesControl
    extends .Ingenuity.Controllers.Templates.Base;
    parameter Boolean enable_angles_input=false "Set true to enable roll and pitch ange inputs, else vx and vy" annotation(Dialog(tab="Conditional"));
    .Electrification.Machines.Control.Signals.w_ref w_ref2(id = 2) annotation(Placement(transformation(extent = {{85.72085017818391,44.387516844850566},{95.61248315514943,54.27914982181609}},origin = {0.0,0.0},rotation = 0.0)));
    .Electrification.Machines.Control.Signals.w_ref w_ref1(id = 1) annotation(Placement(transformation(extent = {{85.69614120200289,-55.637192131330444},{95.63719213133045,-45.69614120200287}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Interfaces.RealInput position_ref[3](quantity = "Length",unit = "m") "Position in world frame" annotation(Placement(transformation(extent = {{-122.0,30.0},{-102.0,50.0}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Blocks.Interfaces.RealInput position[3](unit = "m",quantity = "Length") "Position in world frame" annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = 90.0,origin = {-40.0,-110.0})));
    .Modelica.Blocks.Math.Gain gain(k = -1) annotation(Placement(transformation(extent = {{65.74315551665063,44.40982218331728},{75.59017781668271,54.256844483349376}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelon.Blocks.Control.LimPID limPIDHeave(controllerType = .Modelica.Blocks.Types.SimpleController.PD,k = 50000,yMax = 8000,with_FF = false,Ti = 0.1,Td = 0.01) annotation(Placement(transformation(extent = {{-80.16904163337436,-80.16904163337436},{-63.83095836662564,-63.83095836662564}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelon.Blocks.Control.LimPID limPIDPitch(Td = 0.01,Ti = 0.1,with_FF = false,yMax = 10,k = 10,controllerType = .Modelica.Blocks.Types.SimpleController.PD) annotation(Placement(transformation(extent = {{-34.20641783829847,59.79358216170152},{-21.79358216170153,72.20641783829848}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Interfaces.RealOutput pitchMoment "Connector of actuator output signal" annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = 90.0,origin = {-20.0,110.0})));
    .Modelon.Blocks.Control.LimPID limPIDRoll(controllerType = .Modelica.Blocks.Types.SimpleController.PD,k = 10,yMax = 10,with_FF = false,Ti = 0.1,Td = 0.01) annotation(Placement(transformation(extent = {{3.6033041662778924,-6.396695833722108},{16.396695833722106,6.396695833722108}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Interfaces.RealOutput rollMoment "Connector of actuator output signal" annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = 90.0,origin = {20.0,110.0})));
    .Modelica.Blocks.Interfaces.RealInput angles[3](quantity = "Angle",unit = "rad") "Angles in world frame" annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = 90.0,origin = {0.0,-110.0})));
    .Modelica.Blocks.Interfaces.RealInput angles_ref[3](quantity = "Angle",unit = "rad") "Angles in world frame" annotation(Placement(transformation(extent = {{-120.0,-50.0},{-100.0,-30.0}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Blocks.Interfaces.RealInput velocity_ref[3](quantity = "Velocity",unit = "m/s") "Velocity in world frame" annotation(Placement(transformation(extent = {{-120.0,-10.0},{-100.0,10.0}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Blocks.Interfaces.RealInput velocity[3](unit = "m/s",quantity = "Velocity") "Velocity in world frame" annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = 90.0,origin = {40.0,-110.0})));
    .Modelon.Blocks.Control.LimPID limPIDVx(controllerType = .Modelica.Blocks.Types.SimpleController.PID,k = 0.2,yMax = 10,with_FF = false,Ti = 0.1,Td = 0.01) annotation(Placement(transformation(extent = {{-82.99361732279482,59.00638267720518},{-69.00638267720518,72.99361732279482}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Interfaces.RealInput acceleration[3](quantity = "Velocity",unit = "m/s") "Velocity in world frame" annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = 90.0,origin = {80.0,-110.0})));
    .Modelon.Blocks.Control.LimPID limPIDVy(Td = 0.01,Ti = 0.1,with_FF = false,yMax = 10,k = -0.2,controllerType = .Modelica.Blocks.Types.SimpleController.PID) annotation(Placement(transformation(extent = {{-42.42942926203107,-6.429429262031067},{-29.57057073796893,6.429429262031067}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Logical.Switch switchPitch annotation(Placement(transformation(extent = {{-56.387147985855265,72.38714798585526},{-43.612852014144735,59.612852014144735}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Sources.BooleanExpression anglesInput(y = enable_angles_input) annotation(Placement(transformation(extent = {{-100,78},{-80,98}},origin = {0,0},rotation = 0)));
    .Modelica.Blocks.Logical.Switch switchRoll annotation(Placement(transformation(extent = {{-14.387147985855265,6.387147985855265},{-1.6128520141447353,-6.387147985855265}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Continuous.Derivative derivativeY(T = 0.2) annotation(Placement(transformation(extent = {{-93.7360767456007,-5.736076745600691},{-82.2639232543993,5.736076745600691}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Nonlinear.Limiter limiterVy(uMax = 1) annotation(Placement(transformation(extent = {{-59.538467107460406,-5.538467107460406},{-48.461532892539594,5.538467107460406}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Nonlinear.Limiter limiterVx(uMax = 1) annotation(Placement(transformation(extent = {{-59.538467107460406,34.461532892539594},{-48.461532892539594,45.538467107460406}},origin = {0.0,0.0},rotation = 0.0)));
    .Modelica.Blocks.Continuous.Derivative derivativeX(T = 0.5) annotation(Placement(transformation(extent = {{-93.7360767456007,34.26392325439931},{-82.2639232543993,45.73607674560069}},origin = {0.0,0.0},rotation = 0.0)));
equation
    connect(w_ref1.systemBus,controlBus) annotation(Line(points = {{95.63719213133045,-50.66666666666666},{100,-50.66666666666666},{100,0}},color = {240,170,40},pattern = LinePattern.Dot));
    connect(w_ref2.systemBus,controlBus) annotation(Line(points = {{95.61248315514943,49.33333333333333},{100,49.33333333333333},{100,0}},color = {240,170,40},pattern = LinePattern.Dot));
    connect(gain.y,w_ref2.u_r) annotation(Line(points = {{76.08252893168432,49.33333333333333},{83.24794193394253,49.33333333333333}},color = {0,0,127}));
    connect(limPIDHeave.u_m,position[3]) annotation(Line(points = {{-72,-81.80284996004923},{-40,-81.80284996004923},{-40,-110}},color = {0,0,127}));
    connect(angles[2],limPIDPitch.u_m) annotation(Line(points = {{0,-110},{0,-80},{-28,-80},{-28,58.55229859404183}},color = {0,0,127}));
    connect(limPIDRoll.u_m,angles[1]) annotation(Line(points = {{10,-7.67603500046653},{10,-80},{0,-80},{0,-110}},color = {0,0,127}));
    connect(limPIDVx.u_m,velocity[1]) annotation(Line(points = {{-76,57.60765921264622},{-76,-32},{40,-32},{40,-110}},color = {0,0,127}));
    connect(velocity[2],limPIDVy.u_m) annotation(Line(points = {{40,-110},{40,-26},{-36,-26},{-36,-7.71531511443728}},color = {0,0,127}));
    connect(limPIDPitch.y,pitchMoment) annotation(Line(points = {{-21.172940377871683,66},{-20,66},{-20,110}},color = {0,0,127}));
    connect(limPIDRoll.y,rollMoment) annotation(Line(points = {{17.036365417094316,0},{17.036365417094316,110},{20,110}},color = {0,0,127}));
    connect(limPIDHeave.y,w_ref1.u_r) annotation(Line(points = {{-63.014054203288204,-72},{54,-72},{54,-50.66666666666666},{83.210878469671,-50.66666666666666}},color = {0,0,127}));
    connect(limPIDHeave.y,gain.u) annotation(Line(points = {{-63.014054203288204,-72},{54,-72},{54,49.33333333333333},{64.75845328664742,49.33333333333333}},color = {0,0,127}));
    connect(switchPitch.y,limPIDPitch.u_s) annotation(Line(points = {{-42.97413721555921,66},{-35.44770140595816,66}},color = {0,0,127}));
    connect(limPIDVx.y,switchPitch.u3) annotation(Line(points = {{-68.3070209449257,66},{-62.985799263976006,66},{-62.985799263976006,71.10971838868421},{-57.664577583026315,71.10971838868421}},color = {0,0,127}));
    connect(switchPitch.u1,angles_ref[2]) annotation(Line(points = {{-57.664577583026315,60.890281611315785},{-64,60.890281611315785},{-64,-40},{-110,-40}},color = {0,0,127}));
    connect(anglesInput.y,switchPitch.u2) annotation(Line(points = {{-79,88},{-62,88},{-62,66},{-57.664577583026315,66}},color = {255,0,255}));
    connect(limPIDVy.y,switchRoll.u3) annotation(Line(points = {{-28.927627811765824,0},{-28.927627811765824,5.109718388684211},{-15.664577583026317,5.109718388684211}},color = {0,0,127}));
    connect(switchRoll.u1,angles_ref[1]) annotation(Line(points = {{-15.664577583026317,-5.109718388684211},{-15.664577583026317,-40},{-110,-40}},color = {0,0,127}));
    connect(switchRoll.y,limPIDRoll.u_s) annotation(Line(points = {{-0.9741372155592103,0},{2.3239649995334704,0}},color = {0,0,127}));
    connect(switchRoll.u2,anglesInput.y) annotation(Line(points = {{-15.664577583026317,0},{-15.664577583026317,88},{-79,88}},color = {255,0,255}));
    connect(limPIDHeave.u_s,position_ref[3]) annotation(Line(points = {{-81.80284996004923,-72},{-98,-72},{-98,40},{-112,40}},color = {0,0,127}));
    connect(derivativeY.u,position_ref[2]) annotation(Line(points = {{-94.88329209472084,0},{-98,0},{-98,40},{-112,40}},color = {0,0,127}));
    connect(derivativeY.y,limiterVy.u) annotation(Line(points = {{-81.69031557983924,0},{-60.646160528952485,0}},color = {0,0,127}));
    connect(limiterVy.y,limPIDVy.u_s) annotation(Line(points = {{-47.90768618179355,0},{-43.71531511443729,0}},color = {0,0,127}));
    connect(limiterVx.y,limPIDVx.u_s) annotation(Line(points = {{-47.90768618179355,40},{-44,40},{-44,53},{-88.99361732279482,53},{-88.99361732279482,66},{-84.39234078735379,66}},color = {0,0,127}));
    connect(derivativeX.u,position_ref[1]) annotation(Line(points = {{-94.88329209472084,40},{-112,40}},color = {0,0,127}));
    connect(derivativeX.y,limiterVx.u) annotation(Line(points = {{-81.69031557983924,40},{-60.646160528952485,40}},color = {0,0,127}));
    annotation(Icon(coordinateSystem(preserveAspectRatio = false,extent = {{-100.0,-100.0},{100.0,100.0}}),graphics = {Rectangle(lineColor={0,0,0},fillColor={230,230,230},extent={{-100.0,-100.0},{100.0,100.0}}),Text(lineColor={0,0,255},extent={{-150,150},{150,110}},textString="%name")}));
end AltitudePositionAnglesControl;
